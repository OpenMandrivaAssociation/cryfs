diff -up cryfs-0.11.2/src/fspp/fuse/Fuse.cpp.omv~ cryfs-0.11.2/src/fspp/fuse/Fuse.cpp
--- cryfs-0.11.2/src/fspp/fuse/Fuse.cpp.omv~	2022-07-21 22:48:28.661351085 +0200
+++ cryfs-0.11.2/src/fspp/fuse/Fuse.cpp	2022-07-21 22:51:06.346113553 +0200
@@ -603,21 +603,21 @@ int Fuse::mknod(const bf::path &path, ::
   UNUSED(mode);
   UNUSED(path);
   ThreadNameForDebugging _threadName("mknod");
-  LOG(WARN, "Called non-implemented mknod({}, {}, _)", path, mode);
+  LOG(WARN, "Called non-implemented mknod({}, {}, _)", path.string(), mode);
   return ENOSYS;
 }
 
 int Fuse::mkdir(const bf::path &path, ::mode_t mode) {
   ThreadNameForDebugging _threadName("mkdir");
 #ifdef FSPP_LOG
-  LOG(DEBUG, "mkdir({}, {})", path, mode);
+  LOG(DEBUG, "mkdir({}, {})", path.string(), mode);
 #endif
   try {
     ASSERT(is_valid_fspp_path(path), "has to be an absolute path");
 	// DokanY seems to call mkdir("/"). Ignore that
 	if ("/" == path) {
 #ifdef FSPP_LOG
-        LOG(DEBUG, "mkdir({}, {}): ignored", path, mode);
+        LOG(DEBUG, "mkdir({}, {}): ignored", path.string(), mode);
 #endif
 		return 0;
 	}
@@ -766,7 +766,7 @@ int Fuse::rename(const bf::path &from, c
 //TODO
 int Fuse::link(const bf::path &from, const bf::path &to) {
   ThreadNameForDebugging _threadName("link");
-  LOG(WARN, "NOT IMPLEMENTED: link({}, {})", from, to);
+  LOG(WARN, "NOT IMPLEMENTED: link({}, {})", from.string(), to.string());
   //auto real_from = _impl->RootDir() / from;
   //auto real_to = _impl->RootDir() / to;
   //int retstat = ::link(real_from.string().c_str(), real_to.string().c_str());
